<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>167, 10</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>276, 10</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>